# Default values for foobar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullPolicy: Always
nodeSelector: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: multi-juicer.local
      paths:
        - "/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  type: ClusterIP
  port: 3000

balancer:
  cookie:
    # SET THIS TO TRUE IF IN PRODUCTION
    # Sets secure Flag in cookie
    secure: false
    # If secure is set to true the cookie name will automatically be prefixed with "__Secure-"
    name: balancer
  repository: iteratec/juice-balancer
  tag: latest
  replicas: 1
  service:
    # Kubernetes service type
    type: ClusterIP
    # internal cluster service IP
    clusterIP: null
    # IP address to assign to load balancer (if supported)
    loadBalancerIP: null
    # list of IP CIDRs allowed access to lb (if supported)
    loadBalancerSourceRanges: null
    # IP address to assign to load balancer (if supported)
    externalIPs: null
  resources:
    requests:
      memory: 256Mi
      cpu: 400m
    limits:
      memory: 256Mi
      cpu: 400m
  affinity: {}
  tolerations: []
  metrics:
    # enables prometheus metrics for the balancer
    # if set to true you should change the prometheus-scraper password
    enabled: false
    dashboards:
      # if true, creates a Grafana Dashboard Config Map. (also requires metrics.enabled to be true)
      # These will automatically be imported by Grafana when using the Grafana helm chart, see: https://github.com/helm/charts/tree/master/stable/grafana#sidecar-for-dashboards
      enabled: false
    serviceMonitor:
      # if true, creates a Prometheus Operator ServiceMonitor (also requires metrics.enabled to be true)
      # this will also deploy a servicemonitor which monitors metrics from the Juice Shop instances
      enabled: false
    basicAuth:
      username: prometheus-scraper
      password: ERzCT4pwBDxfCKRGmfrMa8KQ8sXf8GKy

juiceShop:
  # Set to -1 to remove the max Juice Shop instance cap
  maxInstances: 10
  # Juice Shop Image to use
  image: bkimminich/juice-shop
  tag: v10.2.1
  # Change the key when hosting a CTF event
  # This key gets used to generate the challenge flags
  # See: https://pwning.owasp-juice.shop/part1/ctf.html#overriding-the-ctfkey
  ctfKey: 'zLp@.-6fMW6L-7R3b!9uR_K!NfkkTr'
  resources:
    requests:
      memory: 200Mi
      cpu: 200m
    limits:
      memory: 200Mi
      cpu: 200m
  # Specify a custom Juice Shop config.yaml
  # See the JuiceShop Config Docs for more detail: https://pwning.owasp-juice.shop/part1/customization.html#yaml-configuration-file
  # See example customizations: https://github.com/bkimminich/juice-shop/tree/master/config
  config: |
    application:
      logo: JuiceShopCTF_Logo.png
      favicon: favicon_ctf.ico
      # showChallengeHints: false
      showVersionNumber: false
      # showHackingInstructor: false
      showGitHubLinks: false
    ctf:
      # showFlagsInNotifications: true
  # Specify a custom NODE_ENV for JuiceShop.
  # If value is changed to something other than 'multi-juicer' it's not possible to set a custom config.
  nodeEnv: 'multi-juicer'

# Deletes unused JuiceShop instances after a configurable period of inactivity
progressWatchdog:
  repository: iteratec/juice-progress-watchdog
  tag: latest
  resources:
    requests:
      memory: 48Mi
      cpu: 20m
    limits:
      memory: 48Mi
      cpu: 20m

# Deletes unused JuiceShop instances after a configurable period of inactivity
juiceShopCleanup:
  repository: iteratec/juice-cleaner
  tag: latest
  enabled: true
  gracePeriod: 1d
  # cron in which the clean up job is run
  # defaults to once in an hour
  # change this if your grace period if shorter than 1 hour
  cron: '0 * * * *'
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  resources:
    requests:
      memory: 256Mi
    limits:
      memory: 256Mi
  affinity: {}
  tolerations: []
